worker_processes  1;

error_log error.log debug;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # error_log error.log info;

    lua_shared_dict hc 1m;
    
    upstream web {
        server localhost:8080;
    }
    
    init_worker_by_lua_block {
        print("init")
        local hc = require "resty.upstream.healthcheck"

        local ok, err = hc.spawn_checker {
            shm = "hc",
            upstream = "web",
            type = "http",
            http_req = "GET / HTTP/1.0\r\nHost: localhost\r\n\r\n",
            interval = 3000,
            timeout = 3000,
            fall = 3,
            rise = 2,
            valid_statuses = { 200 },
            concurrency = 10,
        }
        if not ok then
	   ngx.log(ngx.ERR, "failed health check: ", err)
	   return
        end
    }

    server {
        listen       80;
        server_name  localhost;

        location / {
	   proxy_pass http://web/;
        }

        location = /dev {
            default_type text/plain;
            content_by_lua_block {
                local hc = require "resty.upstream.healthcheck"
                ngx.print(hc.status_page())
            }
        }
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
	}
    }
}
